File WIN95\ORIGSRC\ISO9660.H:
long iso_read(u_char *buffer, long nsec, long fd);
File WIN95\ORIGSRC\SHIPS.H:
        u_char          weaponType;
        u_char          targetShip;
File WIN95\MARKK\NETWO.H:
        u_char          weaponType;
        u_char          targetShip;
File WIN95\DAVES\LIBGTE.H:
        u_char  r, g, b, cd;
        u_char uv[2]; u_short pad;      /*　　*/  
void InterpolByte(u_char *in1, u_char *in2, long p0, u_char *rtn);
void LoadAverageByte(u_char *v0,u_char *v1,long p0,long p1,u_char *v2);
void LoadAverageCol(u_char *v0,u_char *v1,long p0,long p1,u_char *v2);
File WIN95\CHRISE\LIBCD.H:
#define btoi(b)         ((b)/16*10 + (b)%16)            /* BCD to u_char */
#define itob(i)         ((i)/10*16 + (i)%10)            /* u_char to BCD */
#define CdSeekL(p)      CdControl(CdlSeekL, (u_char *)p, 0)
#define CdSeekP(p)      CdControl(CdlSeekP, (u_char *)p, 0)
File PSX26\INCLUDE\SYS\TYPES.H:
typedef unsigned char   u_char;
File PSX26\INCLUDE\DS.H:
void DsColourTmd(ulong *p,u_char r,u_char g,u_char b);
File PSX26\INCLUDE\LIBCD.H:
#define btoi(b)         ((b)/16*10 + (b)%16)            /* BCD to u_char */
#define itob(i)         ((i)/10*16 + (i)%10)            /* u_char to BCD */
#define CdSeekL(p)      CdControl(CdlSeekL, (u_char *)p, 0)
#define CdSeekP(p)      CdControl(CdlSeekP, (u_char *)p, 0)
char    *CdComstr(u_char);
char    *CdIntstr(u_char);
int     CdControl(u_char, u_char *, u_char *);
int     CdControlB(u_char, u_char *, u_char *);
int     CdControlF(u_char, u_char *);
int     CdSync(int, u_char *);
int     CdSetFilter(u_char, u_char);
File PSX26\INCLUDE\LIBGPU.H:
#define setcode(p, _code)       (((P_TAG *)(p))->code = (u_char)_code)
#define getcode(p)              (u_char)(((P_TAG *)(p))->code)
        u_char  dtd;            /* dither flag (0:off, 1:on) */
        u_char  dfe;            /* flag to draw on display area (0:off 1:on) */
        u_char  isbg;           /* enable to auto-clear */
        u_char  r0, g0, b0;     /* initital background color */
        u_char  isinter;        /* interlace 0: off 1: on */
        u_char  isrgb24;        /* RGB24 bit mode */
        u_char          r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  u0, v0;
        u_char  u1, v1;
        u_char  u2, v2;
        u_char  r0, g0, b0, code;
        u_char  u0, v0;
        u_char  u1, v1;
        u_char  u2, v2;
        u_char  u3, v3;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, pad1;
        u_char  r2, g2, b2, pad2;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, pad1;
        u_char  r2, g2, b2, pad2;
        u_char  r3, g3, b3, pad3;
        u_char  r0, g0, b0, code;
        u_char  u0, v0; u_short clut;
        u_char  r1, g1, b1, p1;
        u_char  u1, v1; u_short tpage;
        u_char  r2, g2, b2, p2;
        u_char  u2, v2; u_short pad2;
        u_char  r0, g0, b0, code;
        u_char  u0, v0; u_short clut;
        u_char  r1, g1, b1, p1;
        u_char  u1, v1; u_short tpage;
        u_char  r2, g2, b2, p2;
        u_char  u2, v2; u_short pad2;
        u_char  r3, g3, b3, p3;
        u_char  u3, v3; u_short pad3;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, p1;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, p1;
        u_char  r2, g2, b2, p2;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, p1;
        u_char  r2, g2, b2, p2;
        u_char  r3, g3, b3, p3;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  u0, v0; u_short clut;
        u_char  r0, g0, b0, code;
        u_char  u0, v0; u_short clut;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, p0;         /* Color of vertex 0 */
        u_char  r1, g1, b1, p1;         /* Color of vertex 1 */
        u_char  r2, g2, b2, p2;         /* Color of vertex 2 */
        u_char  r3, g3, b3, p3;         /* Color of vertex 3 */
        u_char  u0, v0, u1, v1;         /* texture corner point */
        u_char  u2, v2, u3, v3;
int ClearImage(RECT *rect, u_char r, u_char g, u_char b);
File PSX26\INCLUDE\LIBGTE.H:
        u_char  r, g, b, cd;
        u_char uv[2]; u_short pad;      /*　　*/  
File PSX26\INCLUDE\STDDEF.H:
typedef unsigned char u_char;
File PSX26\INCLUDE\TMD.H:
                                        u_char  r0, g0, b0, code;
                                        u_char  r0, g0, b0, code;
                                        u_char  uu0,vv0;
                                        u_char  uu1,vv1;
                                        u_char  uu2,vv2;
                                        u_char  uu0,vv0;
                                        u_char  uu1,vv1;
                                        u_char  uu2,vv2;
                                        u_char  r0, g0, b0, code;
                                        u_char  r0, g0, b0, code;
                                        u_char  uu0,vv0;
                                        u_char  uu1,vv1;
                                        u_char  uu2,vv2;
                                        u_char  uu3,vv3;
                                        u_char  uu0,vv0;
                                        u_char  uu1,vv1;
                                        u_char  uu2,vv2;
                                        u_char  uu3,vv3;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, pad1;
        u_char  r2, g2, b2, pad2;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, p1;
        u_char  r2, g2, b2, p2;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, pad1;
        u_char  r2, g2, b2, pad2;
        u_char  r3, g3, b3, pad3;
        u_char  r0, g0, b0, code;
        u_char  r1, g1, b1, p1;
        u_char  r2, g2, b2, p2;
        u_char  r3, g3, b3, p3;
